colorscheme distinguished

syntax on               " turn syntax highlighting on by default
filetype on             " detect type of file
filetype indent on      " load indent file for specific file type
filetype plugin on
autocmd FileType ruby,eruby set filetype=ruby.eruby.chef
autocmd FileType bash,bats set filetype=bash.bats

" my abbreviations
iabbrev teh the
iabbrev Teh The
iabbrev adn and
iabbrev accross across
iabbrev ipry require 'pry' ; binding.pry
iabbrev sao save_and_open_page;
iabbrev lorem Lorem ipsum dolor sit amet, consectetur adipisicing elit.
iabbrev llorem Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
iabbrev @@ jj.asghar@peopleadmin.com
iabbrev ccopy Copyright 2014 Jonathan Asghar, all rights reserved.
iabbrev ssig --<CR>JJ Asghar<CR>jjasghar@gmail.com

let g:gist_clip_command = 'pbcopy'
let g:gist_open_browser_after_post = 1
let g:gist_detect_filetype = 1
let g:gist_post_private = 1
let g:gist_browser_command = 'open %URL% &'

" my key mappings
map <F10> :set paste<CR>
map <F11> :set nopaste<CR>
imap <F10> <C-O>:set paste<CR>
imap <F11> <nop>
inoremap ht <ESC>
inoremap <ESC> <NOP>
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>
" <Ctrl-l> redraws the screen and removes any search highlighting.
nnoremap <silent> <C-l> :nohl<CR><C-l>
let mapleader = "\<Space>"
nmap <silent> <Leader>S :set spell<CR>
nmap <silent> <Leader>s :set spell!<CR>
nnoremap <Leader>w :w<CR>
nnoremap <Leader>o :CtrlP<CR>
nnoremap <Leader>t :CtrlPTag<CR>
nnoremap <Leader>b :ls<CR>:buffer
" nnoremap <Leader>c :!coffee %<CR>
let g:vimrubocop_keymap = 0
nnoremap <Leader>R :RuboCop<CR>
nnoremap <Leader>r :!ruby %<CR>
nnoremap <leader>ev :vsplit $MYVIMRC<CR>
nnoremap <leader>sv :source $MYVIMRC<CR>
nnoremap <leader>" viw<ESC>a"<ESC>hbi"<ESC>lel
nnoremap <leader>' viw<ESC>a'<ESC>hbi'<ESC>lel

" fugitive git bindings
nnoremap <Leader>ga :Git add %:p<CR><CR>
nnoremap <Leader>gs :Gstatus<CR>
nnoremap <Leader>gc :Gcommit -v -q<CR>
nnoremap <Leader>gt :Gcommit -v -q %:p<CR>
nnoremap <Leader>gd :Gdiff<CR>
nnoremap <Leader>ge :Gedit<CR>
nnoremap <Leader>gr :Gread<CR>
nnoremap <Leader>gw :Gwrite<CR><CR>
nnoremap <Leader>gl :silent! Glog<CR>:bot copen<CR>
nnoremap <Leader>gp :Ggrep<Space>
nnoremap <Leader>gm :Gmove<Space>
nnoremap <Leader>gb :Git branch<Space>
nnoremap <Leader>go :Git checkout<Space>
nnoremap <Leader>gps :Dispatch! git push<CR>
nnoremap <Leader>gpl :Dispatch! git pull<CR>

set spelllang=en_us
set laststatus=2
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
set autoindent          " fix copying in with the stupid indendets
set autochdir           " so i don't have to keep traversing directories
set nocompatible        " use vim defaults
set scrolloff=3         " keep 3 lines when scrolling
set ai                  " set auto-indenting on for programming
set relativenumber
set pastetoggle=<F11>
set showcmd             " display incomplete commands
set nobackup            " do not keep a backup file
set ruler               " show the current row and column

set hlsearch            " highlight searches
set incsearch           " do incremental searching
set showmatch           " jump to matches when entering regexp
set ignorecase          " ignore case when searching
set smartcase           " no ignorecase if Uppercase char present

set visualbell t_vb=    " turn off error beep/flash
set novisualbell        " turn off visual bell
set cryptmethod=blowfish "sometimes you want to vim -x somefile.txt

set backspace=indent,eol,start  " make that backspace key work the way it should

set tags=tags;/

set runtimepath^=~/.vim/bundle/ctrlp.vim
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
set wildignore+=*/tmp/*,*.so,*.swp,*.zip     " MacOSX/Linux
set wildignore+=*\\tmp\\*,*.swp,*.zip,*.exe  " Windows

highlight ColorColumn ctermbg=magenta
call matchadd('ColorColumn', '\%81v', 100)

autocmd vimenter * if !argc() | NERDTree | endif

execute pathogen#infect()

